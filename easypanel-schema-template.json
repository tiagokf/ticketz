{
  "services": [
    {
      "type": "app",
      "data": {
        "projectName": "YOUR_PROJECT_NAME",
        "serviceName": "backend",
        "source": {
          "type": "github",
          "owner": "YOUR_GITHUB_USERNAME",
          "repo": "ticketz",
          "ref": "main",
          "path": "/backend",
          "autoDeploy": false
        },
        "build": {
          "type": "dockerfile",
          "file": "Dockerfile"
        },
        "env": "# Banco de Dados Postgres\nDB_HOST=YOUR_PROJECT_NAME_postgres\nDB_PORT=5432\nDB_NAME=YOUR_DB_NAME\nDB_USER=YOUR_DB_USER\nDB_PASS=YOUR_SECURE_DB_PASSWORD\nDB_DIALECT=postgres\nDB_TIMEZONE=America/Sao_Paulo\n\n# Redis\nREDIS_URI=redis://default:YOUR_SECURE_REDIS_PASSWORD@YOUR_PROJECT_NAME_redis:6379\n\n# Configuração do Backend\nPORT=3000\nNODE_ENV=production\n\n# URLs e CORS - CONFIGURE COM SEUS DOMÍNIOS\nFRONTEND_URL=https://YOUR_FRONTEND_DOMAIN.com\nBACKEND_URL=https://YOUR_BACKEND_DOMAIN.com\nCORS_ORIGIN=https://YOUR_FRONTEND_DOMAIN.com\n\n# Segurança - GERE SEUS PRÓPRIOS TOKENS SEGUROS\nENV_TOKEN=YOUR_SECURE_ENV_TOKEN\nJWT_SECRET=YOUR_SECURE_JWT_SECRET_64_CHARS_MINIMUM\nJWT_REFRESH_SECRET=YOUR_SECURE_JWT_REFRESH_SECRET_64_CHARS_MINIMUM\nPROXY=true\n\n# Email\nEMAIL_ADDRESS=YOUR_EMAIL@YOUR_DOMAIN.com\n\n# Integração Ticketz OSS (opcional)\nTICKETZ_REGISTRY_URL=\n\n# Recaptcha (opcional, se usar)\nRECAPTCHA_SECRET_KEY=",
        "deploy": {
          "replicas": 1,
          "command": null,
          "zeroDowntime": true
        },
        "domains": [
          {
            "host": "YOUR_PROJECT_NAME-backend.YOUR_EASYPANEL_DOMAIN.easypanel.host",
            "https": true,
            "port": 3000,
            "path": "/",
            "middlewares": [],
            "certificateResolver": "",
            "wildcard": false,
            "internalProtocol": "http"
          },
          {
            "host": "YOUR_BACKEND_DOMAIN.com",
            "https": true,
            "port": 3000,
            "path": "/",
            "middlewares": [],
            "certificateResolver": "",
            "wildcard": false,
            "internalProtocol": "http"
          }
        ]
      }
    },
    {
      "type": "app",
      "data": {
        "projectName": "YOUR_PROJECT_NAME",
        "serviceName": "frontend",
        "source": {
          "type": "github",
          "owner": "YOUR_GITHUB_USERNAME",
          "repo": "ticketz",
          "ref": "main",
          "path": "/frontend",
          "autoDeploy": false
        },
        "build": {
          "type": "dockerfile",
          "file": "Dockerfile"
        },
        "env": "# CONFIGURAÇÃO PARA EASYPANEL\n\n# Protocolo do backend (sempre HTTPS em produção)\nBACKEND_PROTOCOL=https\n\n# Host do backend (SEM porta para HTTPS)\nBACKEND_HOST=YOUR_BACKEND_DOMAIN.com\n\n# Caminho para proxy (sempre usar /backend)\nBACKEND_PATH=/backend\n\n# Para resolução DNS interna entre containers\nBACKEND_SERVICE=YOUR_PROJECT_NAME_backend\n\n# Configurações de log\nLOG_LEVEL=debug\n\n# Token de ambiente (OBRIGATÓRIO - mesmo do backend)\nENV_TOKEN=YOUR_SECURE_ENV_TOKEN\n\n# Configurações React (se necessário)\n# REACT_APP_BACKEND_URL=https://YOUR_BACKEND_DOMAIN.com",
        "deploy": {
          "replicas": 1,
          "command": null,
          "zeroDowntime": true
        },
        "domains": [
          {
            "host": "YOUR_PROJECT_NAME-frontend.YOUR_EASYPANEL_DOMAIN.easypanel.host",
            "https": true,
            "port": 80,
            "path": "/",
            "middlewares": [],
            "certificateResolver": "",
            "wildcard": false,
            "internalProtocol": "http"
          },
          {
            "host": "YOUR_FRONTEND_DOMAIN.com",
            "https": true,
            "port": 80,
            "path": "/",
            "middlewares": [],
            "certificateResolver": "",
            "wildcard": false,
            "internalProtocol": "http"
          }
        ]
      }
    },
    {
      "type": "postgres",
      "data": {
        "projectName": "YOUR_PROJECT_NAME",
        "serviceName": "postgres",
        "image": "postgres:17",
        "password": "YOUR_SECURE_DB_PASSWORD"
      }
    },
    {
      "type": "redis",
      "data": {
        "projectName": "YOUR_PROJECT_NAME",
        "serviceName": "redis",
        "image": "redis:7",
        "password": "YOUR_SECURE_REDIS_PASSWORD"
      }
    }
  ]
} 