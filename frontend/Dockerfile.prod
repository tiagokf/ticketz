FROM node:20-alpine as build-deps

WORKDIR /usr/src/app
COPY . .

ENV NODE_OPTIONS --openssl-legacy-provider

RUN --mount=type=cache,target=/root/.npm \
    npm ci && npm run build

FROM nginx:alpine

WORKDIR /usr/share/nginx/html

COPY --from=build-deps /usr/src/app/build /var/www/public
COPY --from=build-deps /usr/src/app/node_modules/@socket.io/admin-ui/ui/dist /var/www/public/socket-admin
COPY nginx /etc/nginx

# Usar configuração específica para produção
COPY nginx/sites.d/frontend.prod.conf /etc/nginx/sites.d/frontend.conf

# Criar script inline usando docker-entrypoint.d (executa antes do nginx)
RUN echo '#!/bin/sh' > /docker-entrypoint.d/99-generate-config.sh && \
    echo 'echo "=== Configuração Frontend ==="' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo 'echo "BACKEND_HOST: $BACKEND_HOST"' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo 'echo "BACKEND_PATH: $BACKEND_PATH"' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo 'cat > /var/www/public/config.json << EOF' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo '{' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo '  "BACKEND_PROTOCOL": "${BACKEND_PROTOCOL:-https}",' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo '  "BACKEND_HOST": "${BACKEND_HOST:-localhost}",' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo '  "BACKEND_PORT": "",' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo '  "BACKEND_PATH": "${BACKEND_PATH:-/backend}",' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo '  "LOG_LEVEL": "${LOG_LEVEL:-info}",' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo '  "ENV_TOKEN": "${ENV_TOKEN:-ticketz}",' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo '  "ENVIRONMENT": "production"' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo '}' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo 'EOF' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo 'cat > /var/www/public/env-config.js << EOF' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo 'window.__APP_ENV_TOKEN__ = "${ENV_TOKEN:-ticketz}";' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo 'console.log("ENV_TOKEN configurado:", window.__APP_ENV_TOKEN__);' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo 'EOF' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo 'echo "=== Config gerado ==="' >> /docker-entrypoint.d/99-generate-config.sh && \
    echo 'cat /var/www/public/config.json' >> /docker-entrypoint.d/99-generate-config.sh && \
    chmod +x /docker-entrypoint.d/99-generate-config.sh

EXPOSE 80 